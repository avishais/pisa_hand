<launch>
    <!-- LAUNCH INTERFACE -->
    <arg name="gui" default="true"/>
    <arg name="use_rviz" default="true"/>
    <arg name="use_joint_state_publisher" default="true"/>
    <arg name="use_effort_control" default="false"/>

    <!-- load Gazebo simulation environment -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find hand_full_control)/worlds/simple_environment.world"/>
        <arg name="paused" value="false"/>
        <!-- when using the real/sim scenario in parallel, set "use_sim_time" to false -->
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="true"/>
        <arg name="debug" value="false"/>
    </include>

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find hand_full_control)/robot/soft_hand_full_actuation.urdf.xacro use_mimic_tag:=false"/>
    <!-- <rosparam command="load" file="$(find hand_full_control)/config/gazebo_position_control.yaml" /> -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model soft_hand -x 0 -y 0 -z 0.0 -R 0 -P 0 -Y 0" respawn="false" output="screen"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

    <param name="publish_frequency" value="100"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  />

    <group if="$(arg use_effort_control)">
        <!-- load controller configurations -->
        <rosparam file="$(find hand_full_control)/config/soft_hand_full_effort_control.yaml" command="load"/>

        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/soft_hand" args="joint_state_controller hand_thumb_abd_joint_effort_controller hand_thumb_inner_joint_effort_controller hand_thumb_outer_joint_effort_controller hand_index_abd_joint_effort_controller hand_index_inner_joint_effort_controller hand_index_middle_joint_effort_controller hand_index_outer_joint_effort_controller hand_middle_abd_joint_effort_controller hand_middle_inner_joint_effort_controller hand_middle_middle_joint_effort_controller hand_middle_outer_joint_effort_controller hand_ring_abd_joint_effort_controller hand_ring_inner_joint_effort_controller  hand_ring_middle_joint_effort_controller hand_ring_outer_joint_effort_controller hand_little_abd_joint_effort_controller hand_little_inner_joint_effort_controller hand_little_middle_joint_effort_controller hand_little_outer_joint_effort_controller"/>
    </group>
    <group unless="$(arg use_effort_control)">
        <!-- load controller configurations -->
        <rosparam file="$(find hand_full_control)/config/soft_hand_full_position_control.yaml" command="load"/>

        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/soft_hand" args="joint_state_controller hand_thumb_abd_joint_position_controller hand_thumb_inner_joint_position_controller hand_thumb_outer_joint_position_controller hand_index_abd_joint_position_controller hand_index_inner_joint_position_controller hand_index_middle_joint_position_controller hand_index_outer_joint_position_controller hand_middle_abd_joint_position_controller hand_middle_inner_joint_position_controller hand_middle_middle_joint_position_controller hand_middle_outer_joint_position_controller hand_ring_abd_joint_position_controller hand_ring_inner_joint_position_controller  hand_ring_middle_joint_position_controller hand_ring_outer_joint_position_controller hand_little_abd_joint_position_controller hand_little_inner_joint_position_controller hand_little_middle_joint_position_controller hand_little_outer_joint_position_controller"/>
    </group>

    <group if="$(arg use_rviz)">
        <node name="my_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find hand_full_control)/launch/my_rviz.rviz" output="screen"/>
    </group>

</launch>